generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id                    Int                     @id @default(autoincrement())
  first_name            String
  last_name             String
  email                 String                  @unique
  password              String
  phone                 String
  address               String
  joined_at             DateTime                @default(now())
  user_events           Json?
  Courier               Courier[]
  Customer              Customer[]
  DarazOrder            DarazOrder[]
  DarazStoreTransaction DarazStoreTransaction[]
  ShopifyOrder          ShopifyOrder[]
  Store                 Store[]
  TemporaryData         TemporaryData[]
  DarazTransaction      DarazTransaction[]
}

model Store {
  seller_id    String   @id
  name         String
  platform     String
  image_url    String
  connected_at DateTime @default(now())
  store_info   Json
  user_id      Int
  user         User     @relation(fields: [user_id], references: [id])
}

model Customer {
  id           String         @id
  shopify_id   String
  first_name   String
  last_name    String
  email        String
  city         String
  province     String
  country      String
  user_id      Int
  user         User           @relation(fields: [user_id], references: [id])
  DarazOrder   DarazOrder[]
  ShopifyOrder ShopifyOrder[]
}

model DarazOrder {
  order_id                       String   @id
  seller_id                      String
  transactions_amount            Decimal
  voucher_platform               String
  voucher                        String
  voucher_seller                 String
  order_number                   String
  created_at                     DateTime
  voucher_code                   String
  gift_option                    String
  shipping_fee_discount_platform String
  promised_shipping_times        String
  updated_at                     DateTime
  price                          Float
  shipping_fee_original          Float
  payment_method                 String
  shipping_fee_discount_seller   Float
  shipping_fee                   Float
  items_count                    Int
  payment_status                 Boolean
  statuses                       String
  is_received                    Boolean
  gift_message                   String
  remarks                        String
  order_items                    Json
  transactions                   Json
  shipping_address               Json
  billing_address                Json
  user_id                        Int
  customer_id                    String
  customer                       Customer @relation(fields: [customer_id], references: [id])
  user                           User     @relation(fields: [user_id], references: [id])
}

model DarazTransaction {
  id                 String    @id
  seller_id          String
  order_number       String?
  order_item_status  String?
  amount             String?
  transaction_date   DateTime?
  transaction_type   String?
  statement          String?
  payment_ref_id     String?
  fee_name           String?
  paid_status        String?
  WHT_amount         String?
  VAT_in_amount      String?
  transaction_number String?
  comment            String
  user_id            Int
  user               User      @relation(fields: [user_id], references: [id])
}

model DarazStoreTransaction {
  seller_id          String   @id
  amount             String
  transaction_date   DateTime
  transaction_type   String
  statement          String
  payment_ref_id     String
  fee_name           String
  paid_status        String
  WHT_amount         String
  VAT_in_amount      String
  transaction_number String
  comment            String
  user_id            Int
  user               User     @relation(fields: [user_id], references: [id])
}

model TemporaryData {
  id        Int      @id @default(autoincrement())
  email     String
  createdAt DateTime @default(now())
  data      Json
  user_id   Int
  user      User     @relation(fields: [user_id], references: [id])
}

model ShopifyOrder {
  current_total_additional_fees_set String
  current_total_discounts           String
  current_total_duties_set          String
  current_total_price               String
  current_total_tax                 String
  email                             String
  financial_status                  String
  fulfillment_status                Json
  line_items                        Json
  note                              String
  phone                             String
  processed_at                      DateTime
  referring_site                    String
  source_name                       String
  subtotal_price                    String
  tags                              String
  total_discounts                   String
  total_line_items_price            String
  total_outstanding                 String
  total_price                       String
  updated_at                        DateTime
  user_id                           Int
  customer_id                       String
  id                                String   @id
  customer                          Customer @relation(fields: [customer_id], references: [id])
  user                              User     @relation(fields: [user_id], references: [id])
}

model Courier {
  id       Int    @id @default(autoincrement())
  name     String
  data     Json
  shippers Json
  user_id  Int
  user     User   @relation(fields: [user_id], references: [id])
}

model DarazLogs {
  id                             Int    @id @default(autoincrement())
  seller_id                      String
  fetched_from_api               String
  orders_appended_single_request String
  orders_appended                String
  total_store_orders             String
  daraz_url                      String
}
