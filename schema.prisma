// schema.prisma

generator client {
    provider = "prisma-client-js"
    output   = "./generated/client"
}

datasource db {
    provider  = "postgresql"
    url       = env("VERCEL_POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("VERCEL_POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
    id                      Int                      @id @default(autoincrement())
    first_name              String
    last_name               String
    email                   String                   @unique
    password                String
    phone                   String
    address                 String
    joinedat                DateTime                 @default(now())
    Stores                  Store[]
    Courier                 Courier[]
    DarazOrders             DarazOrders[]
    ShopifyOrders           ShopifyOrders[]
    TemporaryData           TemporaryData[]
    DarazUnpaidTransactions DarazStoreTransactions[]
}

model Store {
    id              Int    @id @unique @default(autoincrement())
    name            String
    platform        String
    image_url       String
    image_public_id String
    store_info      Json
    user_id         Int
    user            User   @relation(fields: [user_id], references: [id])
}

model DarazOrders {
    order_id                       String    @id @unique @default(uuid())
    seller_id                      String?
    voucher_platform               String?
    voucher                        String?
    voucher_seller                 String?
    order_number                   String?
    created_at                     DateTime?
    voucher_code                   String?
    gift_option                    String?
    shipping_fee_discount_platform String?
    customer_name                  String?
    promised_shipping_times        String?
    updated_at                     DateTime
    price                          String
    shipping_fee_original          String
    payment_method                 String
    shipping_fee_discount_seller   String
    shipping_fee                   String
    items_count                    String
    statuses                       String
    address_billing                Json
    gift_message                   String
    remarks                        String
    address_shipping               Json
    order_items                    Json
    transactions                   Json
    shop_logo                      String
    user_id                        Int
    user                           User      @relation(fields: [user_id], references: [id])
}

model DarazStoreTransactions {
    order_number           String    @id @unique
    orderItem_status       String?
    orderItem_number       String?
    amount                 String?
    transaction_date       DateTime?
    transaction_type       String?
    statement              String?
    payment_ref_id         String?
    fee_name               String?
    paid_status            String?
    WHT_included_in_amount String?
    VAT_in_amount          String?
    transaction_number     String?
    comment                String?
    user_id                Int
    user                   User      @relation(fields: [user_id], references: [id])
}

model ShopifyOrders {
    order_id                          String   @id @unique @default(uuid())
    domain                            String
    order_name                        String?
    contact_email                     String?
    created_at                        DateTime
    current_total_additional_fees_set String?
    current_total_discounts           String?
    current_total_duties_set          String?
    current_total_price               String?
    current_total_tax                 String?
    email                             String?
    financial_status                  String?
    fulfillment_status                Json
    line_items                        Json
    note                              String?
    phone                             String
    processed_at                      DateTime
    referring_site                    String?
    source_name                       String?
    subtotal_price                    String?
    tags                              String?
    total_discounts                   String?
    total_line_items_price            String?
    total_outstanding                 String?
    total_price                       String?
    updated_at                        DateTime
    user_id                           Int
    user                              User     @relation(fields: [user_id], references: [id])
}

model Courier {
    id       Int    @id @unique @default(autoincrement())
    name     String
    data     Json
    shippers Json
    user_id  Int
    user     User   @relation(fields: [user_id], references: [id])
}

// Define a model to hold the temporary data
model TemporaryData {
    id        Int      @id @default(autoincrement())
    email     String
    data      Json
    createdAt DateTime @default(now())

    User   User? @relation(fields: [userId], references: [id])
    userId Int?
}
